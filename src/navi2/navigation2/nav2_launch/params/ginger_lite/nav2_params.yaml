bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_link
    odom_topic: /odom
    bt_loop_duration: 100
    default_server_timeout: 200
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    default_nav_to_pose_bt_xml: "/vendor/galactic/share/nav2_launch/bt_trees/ginger_lite/navigate_to_pose.xml"
    default_nav_through_poses_bt_xml: "/vendor/galactic/share/nav2_launch/bt_trees/ginger_lite/navigate_through_poses.xml"
    default_nav_to_lift_bt_xml: "/vendor/galactic/share/nav2_launch/bt_trees/ginger_lite/navigate_to_lift.xml"
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_smooth_path_action_bt_node
    - nav2_local_path_plan_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_approach_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_globally_updated_goal_condition_bt_node
    - nav2_is_path_valid_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_truncate_path_local_action_bt_node
    - nav2_path_expiring_timer_condition
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_is_goal_safety_condition_bt_node
    - nav2_new_path_longer_condition_bt_node
    - nav2_task_pause_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_truncate_realtime_path_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node
    - nav2_path_longer_on_approach_bt_node
    - nav2_controller_cancel_bt_node
    - nav2_is_goal_safety_controller_bt_node
    - nav2_task_pause_controller_bt_node
    - nav2_main_sequence_node_bt_node
    - nav2_local_planner_decorator_bt_node
    - nav2_clear_static_costmap_action_bt_node
    - nav2_intelligent_docking_action_bt_node
    - nav2_clear_path_action_bt_node
    - nav2_timeout_decorator_bt_node
bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 8.0
    min_x_velocity_threshold: 0.003
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.005
    parking_dist_threshold : 2.0
    failure_tolerance: 10.0
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["precise_goal_checker"] # "precise_goal_checker" general_goal_checker
    controller_plugins: ["FollowPath", "TrackPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 30.0
    # Goal checker parameters
    precise_goal_checker:
     plugin: "nav2_controller::SimpleGoalChecker"
     xy_goal_tolerance: 0.10
     yaw_goal_tolerance: 0.176
     stateful: True
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::FuzzyGoalChecker"
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.178
      fuzzy_stop_max_tolerance: 0.3

    FollowPath:
      plugin: "teb_local_planner::TebLocalPlannerROS"
      teb_autosize: 1.0
      dt_ref: 0.3 # 0.3
      dt_hysteresis: 0.1
      min_samples: 3
      max_samples: 500
      global_plan_overwrite_orientation: True
      allow_init_with_backwards_motion: False
      max_global_plan_lookahead_dist: 2.1
      global_plan_viapoint_sep: 0.28
      global_plan_prune_distance: 0.5
      exact_arc_length: False
      feasibility_check_no_poses: 5
      publish_feedback: False

      # Robot

      max_vel_x: 0.7
      max_vel_theta: 0.5
      acc_lim_x: 0.3
      max_vel_x_backwards: 0.005
      acc_lim_theta: 0.3

      footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
        type: "circular"
        radius: 0.33 # for type "circular"

      # GoalTolerance

      free_goal_vel: False

      # Obstacles

      min_obstacle_dist: 0.03
      inflation_dist: 0.06
      include_costmap_obstacles: True
      costmap_obstacles_behind_robot_dist: 1.0
      obstacle_poses_affected: 15 #15

      dynamic_obstacle_inflation_dist: 0.06
      include_dynamic_obstacles: True
      enb_obstacles_affected: True

      #costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
      #costmap_converter_spin_thread: True
      #costmap_converter_rate: 15

      # Optimization
      no_inner_iterations: 3
      no_outer_iterations: 2
      optimization_activate: True
      optimization_verbose: False
      penalty_epsilon: 0.001
      obstacle_cost_exponent: 1.0
      weight_max_vel_x: 2.0
      weight_max_vel_y: 0.0
      weight_max_vel_theta: 1.0
      weight_acc_lim_x: 0.0
      weight_acc_lim_y: 0.0
      weight_acc_lim_theta: 10.0
      weight_kinematics_nh: 8000.0
      weight_kinematics_forward_drive: 8000.0
      weight_kinematics_turning_radius: 0.0
      weight_optimaltime: 1.0 # must be > 0
      weight_shortest_path: 5.0
      weight_obstacle: 40.0 #50.0
      weight_inflation: 0.1
      weight_dynamic_obstacle: 10.0 # not in use yet
      weight_dynamic_obstacle_inflation: 0.2
      weight_viapoint: 10.0 # 50.0
      weight_adapt_factor: 2.0

      # Homotopy Class Planner

      enable_homotopy_class_planning: False
      enable_multithreading: True
      max_number_classes: 2
      selection_cost_hysteresis: 0.88
      selection_prefer_initial_plan: 1.0
      selection_viapoint_cost_scale: 1.0
      selection_obst_cost_scale: 100.0
      selection_alternative_time_cost: False

      roadmap_graph_no_samples: 15
      roadmap_graph_area_width: 5.0
      roadmap_graph_area_length_scale: 1.0
      h_signature_prescaler: 1.0
      h_signature_threshold: 0.1
      obstacle_heading_threshold: 0.45
      switching_blocking_period: 0.0
      viapoints_all_candidates: True
      delete_detours_backwards: True
      max_ratio_detours_duration_best_duration: 3.0
      visualize_hc_graph: False
      visualize_with_time_as_z_axis_scale: 0.0

      # Recovery

      shrink_horizon_backup: False
      shrink_horizon_min_duration: 10.0
      oscillation_recovery: False
      oscillation_v_eps: 0.1
      oscillation_omega_eps: 0.1
      oscillation_recovery_min_duration: 10.0
      oscillation_filter_duration: 10.0

    backup_controller:
      back_up_vel: -0.1
      acc_lim_theta: 0.6
      min_vel_theta: 0.2
      max_vel_theta: 0.4
      rot_tolerance: 0.14
      controller_frequency: 20.0

    TrackPath:
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      desired_linear_vel: 0.7 #default: 0.5 , max 0.7
      max_linear_accel: 0.4 #default: 2.5
      max_linear_decel: 0.6 #default: 2.5
      lookahead_dist: 0.6
      min_lookahead_dist: 0.3
      max_lookahead_dist: 0.9
      lookahead_time: 1.5
      rotate_to_heading_angular_vel: 0.6 #default: 1.8 0.5
      transform_tolerance: 0.1
      use_velocity_scaled_lookahead_dist: true #default : false
      min_approach_linear_velocity: 0.1 #default : 0.05
      use_approach_linear_velocity_scaling: true
      max_allowed_time_to_collision: 1.0
      use_regulated_linear_velocity_scaling: true
      use_cost_regulated_linear_velocity_scaling: false #default : false
      regulated_linear_scaling_min_radius: 0.9
      regulated_linear_scaling_min_speed: 0.1 #default ; 0.25
      use_rotate_to_heading: true
      rotate_to_heading_min_angle: 0.52 #default : 0.785(45degree)
      rotate_to_heading_max_exit: 0.087 #10degree
      max_angular_value: 0.6
      max_angular_accel: 0.8 #default : 3.2 0.4
      min_angular_accel: 0.1
      cost_scaling_dist: 0.3
      cost_scaling_gain: 1.0
      inflation_cost_scaling_factor: 3.0
      enable_lqr_control: false
      distance_to_path_end_limit: 1.5
      min_collision_check_distance: 0.35
      max_collision_check_distance: 1.5
      wait_obstacle_time: 1.0 #s


controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0 #5.0 hz
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 4
      height: 4
      resolution: 0.02
      robot_radius:  0.29 # 0.32
      plugins: ["obstacle_layer", "virtualwall_layer"]
      virtualwall_layer:
        plugin: "nav2_costmap_2d::VirtualWallLayer"
        enabled: True
        virtualwall_topic: /virtualwalls
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan camera
        scan:
          topic: /scan #/scan  #/scanCorrected
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan" #"PointCloud2" #"LaserScan"
          inf_is_valid: True
          raytrace_max_range: 2.8
          raytrace_min_range: 0.0
          obstacle_max_range: 2.0
          obstacle_min_range: 0.0
        camera:
          topic: /depth/scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          inf_is_valid: False
          raytrace_max_range: 2.0
          raytrace_min_range: 0.0
          obstacle_max_range: 1.5
          obstacle_min_range: 0.0
        scan_sonar:
          topic: /sonar_scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          inf_is_valid: True
          raytrace_max_range: 2.0
          raytrace_min_range: 0.0
          obstacle_max_range: 1.0
          obstacle_min_range: 0.0
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

planner_costmap:
  planner_costmap:
    ros__parameters:
      update_frequency: 10.0 # 1.0
      publish_frequency: 1.0 # 0.5
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.02
      robot_radius: 0.30 #0.34
      plugins: ["static_layer", "obstacle_layer", "virtualwall_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        map_topic: /occ_map

      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        track_unknown_space: true
        observation_sources: scan camera
        sonar:
          data_type: LaserScan
          topic: sonar_scan
          marking: true
          clearing: true
          obstacle_range: 1.0
          raytrace_range: 1.6
          min_obstacle_height: 0.05
          max_obstacle_height: 0.55
          inf_is_valid: true
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          inf_is_valid: true
        camera:
          topic: /depth/scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          inf_is_valid: False
        sonar:
          topic: /sonar_scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          inf_is_valid: False
      virtualwall_layer:
        plugin: "nav2_costmap_2d::VirtualWallLayer"
        enabled: True
        virtualwall_topic: /virtualwalls
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 4.0 #5.0
        inflation_radius: 0.6
      always_send_full_costmap: True
  planner_costmap_client:
    ros__parameters:
      use_sim_time: False
  planner_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 0.5
      publish_frequency: 0.1
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      robot_radius: 0.30
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "virtualwall_layer", "inflation_layer"]
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        map_topic: /occ_map
      virtualwall_layer:
        plugin: "nav2_costmap_2d::VirtualWallLayer"
        enabled: True
        virtualwall_topic: /virtualwalls
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan camera
        scan:
          topic: /scan  #/scan # /scanCorrected
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"  #"PointCloud2"  # "LaserScan"
          inf_is_valid: True
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.8
          obstacle_min_range: 0.0
        camera:
          topic: /depth/scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          inf_is_valid: False
          raytrace_max_range: 2.0
          raytrace_min_range: 0.0
          obstacle_max_range: 1.5
          obstacle_min_range: 0.0
        scan_sonar:
          topic: /sonar_scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          inf_is_valid: False
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 1.0
          obstacle_min_range: 0.0
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0
        inflation_radius: 0.8
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

planner_server:
  ros__parameters:
    expected_planner_frequency: 1.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      tolerance: 0.5                      # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: false             # whether or not to downsample the map
      downsampling_factor: 1                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: false                   # allow traveling in unknown space
      max_iterations: 1000000               # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 2.0                # max time in s for planner to plan, smooth
      motion_model_for_search: "MOORE" # "MOORE" # "VON_NEUMANN"   # 2D Moore, Von Neumann "VON_NEUMANN"
      cost_travel_multiplier: 10.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      smoother:
        costmap_topic: global_costmap/costmap_raw
        footprint_topic: global_costmap/published_footprint
        robot_base_frame: base_link
        transform_tolerance: 0.5
        smoother_plugin: "nav2_smoother::SimpleSmoother"
        max_its: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: False

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_planner_server:
  ros__parameters:
    expected_planner_frequency: 1.0
    use_sim_time: False
    planner_id: "GridBased"
    path_distance: 0.0
    bezier_transition_threshold: 0.523
    bezier_move_points_num: 20
    GridBased:
      plugin: "nav2_smac_planner/SmacPlanner2D"
      tolerance: 0.5                      # tolerance for planning if unable to reach exact pose, in meters
      downsample_costmap: false             # whether or not to downsample the map
      downsampling_factor: 1                # multiplier for the resolution of the costmap layer (e.g. 2 on a 5cm costmap would be 10cm)
      allow_unknown: false                   # allow traveling in unknown space
      max_iterations: 1000000               # maximum total iterations to search for before failing (in case unreachable), set to -1 to disable
      max_on_approach_iterations: 1000      # maximum number of iterations to attempt to reach goal once in tolerance
      max_planning_time: 2.0                # max time in s for planner to plan, smooth
      motion_model_for_search:  "MOORE" # "MOORE" # "VON_NEUMANN"   # 2D Moore, Von Neumann "VON_NEUMANN"
      cost_travel_multiplier: 10.0           # Cost multiplier to apply to search to steer away from high cost areas. Larger values will place in the center of aisles more exactly (if non-`FREE` cost potential field exists) but take slightly longer to compute. To optimize for speed, a value of 1.0 is reasonable. A reasonable tradeoff value is 2.0. A value of 0.0 effective disables steering away from obstacles and acts like a naive binary search A*.
      use_final_approach_orientation: false # Whether to set the final path pose at the goal's orientation to the requested orientation (false) or in line with the approach angle so the robot doesn't rotate to heading (true)
      smoother:
        costmap_topic: planner_costmap/costmap_raw
        footprint_topic: planner_costmap/published_footprint
        robot_base_frame: base_link
        transform_tolerance: 0.5
        smoother_plugin: "nav2_smoother::SimpleSmoother"
        max_its: 100
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: True

        # smoother_plugin: "nav2_constrained_smoother/ConstrainedSmoother"
        # reversing_enabled: False       # whether to detect forward/reverse direction and cusps. Should be set to false for paths without orientations assigned
        # path_downsampling_factor: 4   # every n-th node of the path is taken. Useful for speed-up
        # path_upsampling_factor: 1     # 0 - path remains downsampled, 1 - path is upsampled back to original granularity using cubic bezier, 2... - more upsampling
        # keep_start_orientation: true  # whether to prevent the start orientation from being smoothed
        # keep_goal_orientation: False   # whether to prevent the gpal orientation from being smoothed
        # minimum_turning_radius: 0.5 # minimum turning radius the robot can perform. Can be set to 0.0 (or w_curve can be set to 0.0 with the same effect) for diff-drive/holonomic robots
        # w_curve: 50.0                 # weight to enforce minimum_turning_radius
        # w_dist: 0.02                   # weight to bind path to original as optional replacement for cost weight
        # w_smooth: 25000.0             # weight to maximize smoothness of path
        # w_cost:  0.025 # 0.015                 # weight to steer robot away from collision and cost

        # # Parameters used to improve obstacle avoidance near cusps (forward/reverse movement changes)
        # w_cost_cusp_multiplier: 20.0   # option to use higher weight during forward/reverse direction change which is often accompanied with dangerous rotations
        # cusp_zone_length: 2.0         # length of the section around cusp in which nodes use w_cost_cusp_multiplier (w_cost rises gradually inside the zone towards the cusp point, whose costmap weight eqals w_cost*w_cost_cusp_multiplier)
        # # Points in robot frame to grab costmap values from. Format: [x1, y1, weight1, x2, y2, weight2, ...]
        # # IMPORTANT: Requires much higher number of iterations to actually improve the path. Uncomment only if you really need it (highly elongated/asymmetric robots)
        # # cost_check_points: [-0.185, 0.0, 1.0]

        # optimizer:
        #   max_iterations: 70            # max iterations of smoother
        #   debug_optimizer: false        # print debug info
        #   gradient_tol: 5e3
        #   fn_tol: 1.0e-15
        #   param_tol: 1.0e-20
        #   linear_solver_type: SPARSE_NORMAL_CHOLESKY

local_planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: True

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_link
    transform_timeout: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

waypoint_follower:
  ros__parameters:
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugins: ["wait_at_waypoint", "photo_at_waypoint", "input_at_waypoint", "wait_resume_at_waypoint"]
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_type: 0
      waypoint_pause_duration: 50
    photo_at_waypoint:
      plugin: "nav2_waypoint_follower::PhotoAtWaypoint"
      enabled: True
      waypoint_type: 1
      image_topic: /camera/color/image_raw
      save_dir: /tmp/waypoint_images
      image_format: png
    input_at_waypoint:
      plugin: "nav2_waypoint_follower::InputAtWaypoint"
      enabled: True
      waypoint_type: 2
      timeout: 10.0
      input_topic: input_at_waypoint/input
    wait_resume_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitResumeAtWaypoint"
      enabled: True
      waypoint_type: 100
      wait_timeout: 300
