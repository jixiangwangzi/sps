<?xml version="1.0"?>
<!--
  For instructions on using Groot and description of the following BehaviorTree nodes,
  please refer to the groot_instructions.md and REAMDE.md respectively located in the 
  nav2_behavior_tree package.
-->
<root>
  <TreeNodesModel>
    <!-- ############################### ACTION NODES ################################# -->
    <Action ID="IntelligentDocking">
      <input_port name="wait_time">Wait time before reach goal</input_port>
      <input_port name="wait_dist">Wait dist before reach goal</input_port>
      <input_port name="input_path">Path inputed</input_port>
    </Action>

    <Action ID="CancelControl">
      <input_port name="service_name">Service name to cancel the controller server</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
    </Action>

    <Action ID="BackUp">
      <input_port name="backup_dist">Distance to backup</input_port>
      <input_port name="backup_speed">Speed at which to backup</input_port>
    </Action>

    <Action ID="ClearEntireCostmap">
      <input_port name="service_name">Service name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
    </Action>

    <Action ID="ClearCostmapAroundRobot">
      <input_port name="service_name">Service name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
      <input_port name="reset_distance">Rest Dist</input_port>
    </Action>

    <Action ID="ClearCostmapExceptRegion">
      <input_port name="reset_distance">Distance from the robot above which obstacles are cleared</input_port>    
      <input_port name="service_name">Service name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
    </Action>

    <Action ID="ClearAppointedCostmap">
      <input_port name="service_name">Service name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
    </Action>

    <Action ID="ClearStaticCostmap">
      <input_port name="mark">mark</input_port>
      <input_port name="forward_dist">forward_dist</input_port>
      <input_port name="half_width">half width</input_port>
      <input_port name="path">Path to follow</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
    </Action>

    <Action ID="ComputePathToPose">
      <input_port name="goal">Destination to plan to</input_port>
      <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
      <output_port name="path">Path created by ComputePathToPose node</output_port>
      <input_port name="planner_id"/>
    </Action>

    <Action ID="ComputePathThroughPoses">
      <input_port name="goals">Destinations to plan through</input_port>
      <input_port name="start">Start pose of the path if overriding current robot pose</input_port>
      <input_port name="service_name">Service name</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
      <input_port name="planner_id">Mapped name to the planner plugin type to use</input_port>
      <output_port name="path">Path created by ComputePathToPose node</output_port>
      <input_port name="planner_id"/>
    </Action>

    <Action ID="RemovePassedGoals">
      <input_port name="input_goals">Input goals to remove if passed</input_port>
      <input_port name="radius">Radius tolerance on a goal to consider it passed</input_port>
      <input_port name="global_frame">Global frame</input_port>
      <input_port name="robot_base_frame">Robot base frame</input_port>
      <output_port name="output_goals">Set of goals after removing any passed</output_port>
    </Action>

    <Action ID="TruncateRealtimePath">
      <input_port name="input_path">Path to truncate</input_port>
      <input_port name="global_frame">Global frame</input_port>
      <input_port name="robot_base_frame">Robot base frame</input_port>
      <output_port name="output_path">Truncated path to utilize</output_port>
    </Action>

    <Action ID="SmoothPath">
      <input_port name="smoother_id" default="SmoothPath"/>
      <input_port name="unsmoothed_path">Path to be smoothed</input_port>
      <input_port name="max_smoothing_duration">Maximum smoothing duration</input_port>
      <input_port name="check_for_collisions">Bool if collision check should be performed</input_port>
      <output_port name="smoothed_path">Smoothed path</output_port>
      <output_port name="smoothing_duration">Smoothing duration</output_port>
      <output_port name="was_completed">True if smoothing was not interrupted by time limit</output_port>
    </Action>
    
    <Action ID="LocalPathPlan">
      <input_port name="truncate_distance">Distance to be Truncated Global path to be reference of local path plan</input_port>
      <input_port name="global_path">Global path</input_port>
      <input_port name="near_to_goal_length">length of global path to judge if robot near to goal</input_port>
      <output_port name="result_path">Local path plan result</output_port>
      <output_port name="planning_time">Local path plan duration</output_port>
    </Action>
    
    <Action ID="FollowPath">
      <input_port name="controller_id" default="FollowPath"/>
      <input_port name="path">Path to follow</input_port>
      <input_port name="goal_checker_id" default="GoalChecker">Goal checker</input_port>
    </Action>

    <Action ID="NavigateToPose">
        <input_port name="goal">Goal</input_port>
    </Action>

    <Action ID="NavigateThroughPoses">
        <input_port name="goals">Goals</input_port>
        <input_port name="service_name">Service name</input_port>
        <input_port name="server_timeout">Server timeout</input_port>
        <input_port name="behavior_tree">Behavior tree to run</input_port>
    </Action>

    <Action ID="ReinitializeGlobalLocalization">
    </Action>

    <Action ID="TruncatePath">
        <input_port name="distance">Distance before goal to truncate</input_port>
        <input_port name="input_path">Path to truncate</input_port>
        <output_port name="output_path">Truncated path to utilize</output_port>
    </Action>

    <Action ID="TruncatePathLocal">
      <input_port name="input_path">Distance in forward direction</input_port>
      <input_port name="distance_forward">Distance in forward direction</input_port>
      <input_port name="distance_backward">Distance in backward direction</input_port>
      <input_port name="robot_frame">Robot base frame id</input_port>
      <input_port name="transform_tolerance">Transform lookup tolerance</input_port>
      <input_port name="pose">Manually specified pose to be used if overriding current robot pose</input_port>
      <input_port name="angular_distance_weight">Weight of angular distance relative to positional distance when finding which path pose is closest to robot. Not applicable on paths without orientations assigned</input_port>
      <input_port name="max_robot_pose_search_dist">Maximum forward integrated distance along the path (starting from the last detected pose) to bound the search for the closest pose to the robot. When set to infinity (default), whole path is searched every time</input_port>
      <output_port name="output_path">Truncated path to utilize</output_port>
    </Action>

    <Action ID="ClearPath">
        <input_port name="input_path">Path to truncate</input_port>
        <output_port name="output_path">Truncated path to utilize</output_port>
    </Action>

    <Action ID="PlannerSelector">
        <input_port name="topic_name">Name of the topic to receive planner selection commands</input_port>
        <input_port name="default_planner">Default planner of the planner selector</input_port>
        <output_port name="selected_planner">Name of the selected planner received from the topic subcription</output_port>
    </Action>

    <Action ID="ControllerSelector">
        <input_port name="topic_name">Name of the topic to receive controller selection commands</input_port>
        <input_port name="default_controller">Default controller of the controller selector</input_port>
        <output_port name="selected_controller">Name of the selected controller received from the topic subcription</output_port>
    </Action>

    <Action ID="GoalCheckerSelector">
        <input_port name="topic_name">Name of the topic to receive goal checker selection commands</input_port>
        <input_port name="default_goal_checker">Default goal checker of the controller selector</input_port>
        <output_port name="selected_goal_checker">Name of the selected goal checker received from the topic subcription</output_port>
    </Action>

    <Action ID="Spin">
      <input_port name="spin_dist">Spin distance</input_port>
    </Action>

    <Action ID="Wait">
      <input_port name="wait_duration">Wait time</input_port>
    </Action>

    <Action ID="ArbitraryWait">
      <input_port name="is_pause_task">True if pause nav task</input_port>
      <input_port name="wait_time">Max wait time</input_port>
      <input_port name="max_interval_tick_time">Max interval time for continuous counter</input_port>
    </Action>
    <!-- ############################### CONDITION NODES ############################## -->
    <Condition ID="IsGoalReached">

    </Condition>
      
    <Condition ID="GoalReached">
        <input_port name="goal">Destination</input_port>
    </Condition>

    <Condition ID="GoalApproach">
        <input_port name="goal_approach_dist">Proximity distance for the robot to the goal on approach</input_port>
    </Condition>

    <Condition ID="IsStuck"/>

    <Condition ID="TransformAvailable">
      <input_port name="child">Child frame for transform</input_port>
      <input_port name="parent">Parent frame for transform</input_port>
    </Condition>

    <Condition ID="GoalUpdated"/>

    <Condition ID="GlobalUpdatedGoal"/>

    <Condition ID="IsBatteryLow">
      <input_port name="min_battery">Min battery % or voltage before triggering</input_port>
      <input_port name="battery_topic">Topic for battery info</input_port>
      <input_port name="is_voltage">Bool if check based on voltage or total %</input_port>
    </Condition>

    <Condition ID="DistanceTraveled">
      <input_port name="distance">Distance to check if passed</input_port>
      <input_port name="global_frame">reference frame to check in</input_port>
      <input_port name="robot_base_frame">Robot frame to check relative to global_frame</input_port>
    </Condition>

    <Condition ID="TimeExpired">
      <input_port name="seconds">Time to check if expired</input_port>
    </Condition>

    <Condition ID="PathExpiringTimer">
      <input_port name="seconds">Time to check if expired</input_port>
      <input_port name="path">Check if path has been updated to enable timer reset</input_port>
    </Condition>

    <Condition ID="InitialPoseReceived">
    </Condition>

    <Condition ID="IsGlobalPathValid">
      <input_port name="path"> Path to validate </input_port>
      <input_port name="check_dis"> Path distance to check </input_port>
      <input_port name="server_timeout"> Server timeout </input_port>
    </Condition>

    <Condition ID="IsPathValid">
      <input_port name="path"> Path to validate </input_port>
      <input_port name="check_dis"> Path distance to check </input_port>
      <input_port name="server_timeout"> Server timeout </input_port>
    </Condition>
 
    <Condition ID="IsGoalSafetyCondition">
      <input_port name="path">Planned Path</input_port>
      <input_port name="check_dist_threshold">Threshold for remaining global path length</input_port>
      <input_port name="seconds">The interval time to check the point</input_port>
      <input_port name="wait_time">"Max wait time"</input_port>
      <input_port name="server_timeout">Server timeout</input_port>
      <output_port name="is_goal_safety">True if goal safety</output_port>    
    </Condition>    

    <Condition ID="NewPathLongerCondition">
      <input_port name="path">Planned Path</input_port>
      <input_port name="prox_len">Proximity length (m) for the path to be longer on approach</input_port>
      <input_port name="length_factor">Length multiplication factor to check if the path is significantly longer </input_port>
      <input_port name="detour_len">Proximity length (m) for the path to be longer on approach </input_port>
      <input_port name="force_update_seconds">Force to update path when goal update </input_port>
      <input_port name="wait_time">"Max wait time"</input_port>
      <input_port name="forward_sampling_distance">"Forward sampling distance"</input_port>
      <input_port name="oscillation_threshold">"Path oscillation judgment threshold"</input_port>
      <output_port name="detour_wait_state">True if detour wait state</output_port>        
    </Condition>

    <Condition ID="TimeTick">
      <input_port name="seconds">Time to tick</input_port>
    </Condition>

    <Condition ID="TaskPauseCondition">
      <output_port name="is_pause_task">True if pause nav task</output_port>
    </Condition>   

    <!-- ############################### CONTROL NODES ################################ -->
    <Control ID="PipelineSequence"/>

    <Control ID="RecoveryNode">
      <input_port name="number_of_retries">Number of retries</input_port>
    </Control>

    <Control ID="RoundRobin"/>
    
    <Control ID="MainSequence"/>

    <!-- ############################### DECORATOR NODES ############################## -->
    <Decorator ID="LocalPlannerDecorator">
      <input_port name="try_time">timer for trigger local planner</input_port>
    </Decorator>

    <!-- ############################### DECORATOR NODES ############################## -->
    <Decorator ID="TimeOutDecorator">
      <input_port name="time_out">Time threshold</input_port>
    </Decorator>
    
    <Decorator ID="RateController">
      <input_port name="hz">Rate</input_port>
    </Decorator>

    <Decorator ID="DistanceController">
      <input_port name="distance">Distance</input_port>
    </Decorator>

    <Decorator ID="SingleTrigger">
    </Decorator>

    <Decorator ID="GoalUpdater">
      <input_port name="input_goal">Original goal in</input_port>
      <output_port name="output_goal">Output goal set by subscription</output_port>
    </Decorator>

    <Decorator ID="SpeedController">
      <input_port name="min_rate">Minimum rate</input_port>
      <input_port name="max_rate">Maximum rate</input_port>
      <input_port name="min_speed">Minimum speed</input_port>
      <input_port name="max_speed">Maximum speed</input_port>
      <input_port name="filter_duration">Duration (secs) for velocity smoothing filter</input_port>
    </Decorator>

    <Decorator ID="PathLongerOnApproach">
      <input_port name="detour_wait_state">True if detour wait state</input_port>  
      <input_port name="path">Planned Path</input_port>
      <input_port name="prox_len">Proximity length (m) for the path to be longer on approach</input_port>
      <input_port name="length_factor">Length multiplication factor to check if the path is significantly longer </input_port>
      <input_port name="detour_len">Proximity length (m) for the path to be longer on approach </input_port>
      <input_port name="force_update_seconds">Force to update path when goal update </input_port>
      <input_port name="wait_time">Max wait time</input_port>
      <output_port name="new_heartbeat">"True if new heartbeat"</output_port>  
    </Decorator>

    <Decorator ID="GoalUpdatedController">
    </Decorator>

    <Decorator ID="IsGoalSafetyController">
      <input_port name="path">Planned Path</input_port>
      <input_port name="check_dist_threshold">Threshold for remaining global path length</input_port>
      <input_port name="seconds">The interval time to check the point</input_port>
      <input_port name="wait_time">Max wait time</input_port>
      <input_port name="server_timeout">Server timeout</input_port> 
      <input_port name="controller_frequency">Max controller frequency</input_port> 
      <output_port name="new_heartbeat">True if new heartbeat</output_port>  
    </Decorator>

    <Decorator ID="TaskPauseController">
      <input_port name="is_pause_task">True if pause nav task</input_port> 
    </Decorator>
  </TreeNodesModel>
</root>
